#!/bin/bash

set -e
set -u

Usage () { cat >&2 <<EOF
Usage: $0 FILE
Where:
  FILE  File containing multiple CA certificates
EOF
}


_log_level=3
_log () {
  local level=$1 ; shift

  if [ "$level" -ge "$_log_level" ] ; then
    printf >&2 "${FUNCNAME[1]}: %s\n" "$*"
  fi
}
Debug () { _log 1 "$@" ; }
Info () { _log 2 "$@" ; }
Warn () { _log 3 "$@" ; }
Error () { _log 4 "$@" ; }


while [ $# -gt 0 ] ; do
  case "$1" in
    --help|-h) Usage ; exit 0 ;;
    --) shift ; break ;;
    -*) Usage ; exist 1 ;;
    *) break ;;
  esac
done

if [ $# -ne 1 ] ; then
  Usage
  exit 1
fi

infile=$1


main () {
  local tmp=$( mktemp -d )
  local all_pem_file=${tmp}/all.pem
  local individual_pem_files
  local pem_file

  convert_to_pem "$infile" "$all_pem_file"
  individual_pem_files=( $( split_pem_file "$all_pem_file" "${tmp}/individual." ) )
  for pem_file in "${individual_pem_files[@]}" ; do
    save_pem_file "$pem_file"
  done
}


convert_to_pem () {
  local infile=$1
  local outfile=$2

  if grep -q -e '^-----BEGIN CERTIFICATE-----' -- "$infile" ; then
    Debug Already PEM
    cat < "$infile" > "$outfile"
    return 0
  fi

  if grep -q -e '^-----BEGIN PKCS7-----' -- "$infile" ; then
    Debug Trying pkcs7 PEM
    if openssl pkcs7 -in "$infile" -inform PEM -text -print_certs > "$outfile" ; then
      return 0
    fi
  fi

  Debug Trying pkcs7 DEM
  if openssl pkcs7 -in "$infile" -inform DEM -text -print_certs > "$outfile" ; then
    return 0
  fi

  Debug Dunno what to do with "$infile"
  return 1
}


split_pem_file () {
  local infile=$1
  local outfile_prefix=$2
  local cert_count=$( grep -c '^-----BEGIN CERTIFICATE-----' -- "$infile" )

  < "$infile" sed -e '/^$/d' \
  | csplit -k -s \
      -f "$outfile_prefix" \
      - \
      '/^-----END CERTIFICATE-----/+1' \
      "{$((cert_count - 2))}"

  ls -1 "$outfile_prefix"*
}


save_pem_file () {
  local infile=$1
  local serial=$( x509_attr serial "$infile" )
  local subject=$( x509_attr subject "$infile" )
  local subject_hash=$( x509_attr subject_hash "$infile" )

  local clean_subject=${subject##*/}
  clean_subject=${clean_subject#*=}
  clean_subject=${clean_subject// /_}

  local outfile=cert.${subject_hash}.${serial}.${clean_subject}.pem

  openssl x509 -in "$infile" -out "$outfile" -text

  printf '%s\n' "$outfile"
}


function x509_attr () {
  local attribute_name=$1
  local infile=$2

  openssl x509 -noout -"$attribute_name" -in "$infile" \
  | sed -e 's,^[^=]*=[ ]*,,'
}


main
